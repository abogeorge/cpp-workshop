===== DAY 1 ===== 

** Macros **
 - mai vechi, template functions permit mai multe verificari.
 * Special preprocessor directives (look them up)
 - #define smtg
 * try: (i++) * (i++)
 - macrourile sunt globale; litere mari si underscore; dupa definire ";"
 - macrourile sunt de evitat; de folosit cu variabile, nu cu expresii
 - String-ify and Token pasting
 - Def guards, incep cu _NAMESPACE_NUMEHEADER_H_
 - La includerea unui header intr-un cpp, se pot folosi def guard cu numele lui,
   optimizare la compilare
 - Pentru macro multiline se defineste cu do {} while(0) fara ";"
 Exercitiul 1: -

** Pointers **
 - SET "_NO_DEBUG_HEAP=1" - de adaugat in vs pentru a elimina rescanul la debug
 - NULL este void pointer de 0
 - nullptr introdus in c++11
 - auto_ptr are probleme de ownership: auto_ptr a = auto_ptr b; b va fi sters;
   a nu se folosi in containere.

** Refrences **
 - Syntactic sugar for pointers
 - Toate referinteles sunt const
 
===== DAY 2 ===== 

** Functions **
 - la get de obiecte const Object& getObject(); La retur de primitve, nu este nevoie de referinta.
 - in loc de return, in corpul functiei void foo(std::string& toReturn);
 - in c++ din cauza name mangling, la overloading conteaza doar semnatura functiei, nu si tipul returnat:
	int foo(int b);
	std::string foo(int b); // sunt acelasi lucru

** Pointers **
 - static const TestStruct& getConstant() - ramane cea mai buna varianta de apel	

** Classes **
 - pentru a elimina const a unui obiect folosim const_cast<>()
 
===== DAY 3 ===== 

** Recap **
 - var -> static (globale); -> const (locale); ->  copy (const&)
 - fc -> static; -> param: const&
 - class -> fc/methods -> const &; const; -> macro DISABLE_COPY;
		 -> membri -> private

** Qt4 Build **
 - unpack Qt4.7z
 - edit QtBuildConsole.cmd
 - edit QtVisualStudio.cmd
 - unpack strawberry-perl-5.24.0.1-64bit-PDL.zip
 - unpack sqlite-amalgamation-3130000.zip and move content to Qt4/src/3rdparty/sqlite
 - run QtBuildConsole.cmd and type:
	- configure -platform win32-msvc2015 -release -opensource -confirm-license -no-dsp -no-vcproj -plugin-sql-odbc -largefile -openssl -no-dbus -no-webkit -no-script -no-scripttools -no-declarative -no-declarative-debug -no-native-gestures -mp  -nomake examples -nomake demos -nomake tests -nomake tools
	- jom\jom.exe -j8
	
** Debug Dump cu WinDbg **	
 - Open dump in WinDbg
 - Symbol file path
 
** STL **
 
** QT **
** QT STL **
 - QVector <>
 - QList <> - de evitat; QStringList <>; QVariantList <>;
 - QSet <> - elemente unice, DAR nesortate
 - QMap <,>
 - QHash <,> - recomandat fata de QMap pentru chei mari;
 - QString - utf16; probleme la conversii
 - QVariant - asemanator Object din Java; QVariant x(3); x.toInt(); x.toString();
 - QObject
 
** Config VS Project **
 - Additional include dirs to Qt4/include
 - Additional include libraries to Qt4/lib
 - Additional libraries:
	QtCore4.lib
	QtNetwork4.lib
	QtSql4.lib
	QtGui4.lib
 - Run QtVisualStudio.cmd

		 